(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{374:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ebnf", function() { return ebnf; });\nvar commentType = {slash: 0, parenthesis: 1};\nvar stateType = {comment: 0, _string: 1, characterClass: 2};\n\nconst ebnf = {\n  startState: function () {\n    return {\n      stringType: null,\n      commentType: null,\n      braced: 0,\n      lhs: true,\n      localState: null,\n      stack: [],\n      inDefinition: false\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == \'"\') || (stream.peek() == "\'")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(stateType._string);\n      } else if (stream.match(\'/*\')) { //comments starting with /*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.slash;\n      } else if (stream.match(\'(*\')) { //comments starting with (*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.parenthesis;\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case stateType._string:\n      while (state.stack[0] === stateType._string && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === "\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\"\\\']*/);\n        }\n      }\n      return state.lhs ? "property" : "string"; // Token style\n\n    case stateType.comment:\n      while (state.stack[0] === stateType.comment && !stream.eol()) {\n        if (state.commentType === commentType.slash && stream.match(\'*/\')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else if (state.commentType === commentType.parenthesis && stream.match(\'*)\')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else {\n          stream.match(/^.[^\\*]*/);\n        }\n      }\n      return "comment";\n\n    case stateType.characterClass:\n      while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(\'.\'))) {\n          state.stack.shift();\n        }\n      }\n      return "operator";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case "[":\n      stream.next();\n      state.stack.unshift(stateType.characterClass);\n      return "bracket";\n    case ":":\n    case "|":\n    case ";":\n      stream.next();\n      return "operator";\n    case "%":\n      if (stream.match("%%")) {\n        return "header";\n      } else if (stream.match(/[%][A-Za-z]+/)) {\n        return "keyword";\n      } else if (stream.match(/[%][}]/)) {\n        return "bracket";\n      }\n      break;\n    case "/":\n      if (stream.match(/[\\/][A-Za-z]+/)) {\n        return "keyword";\n      }\n    case "\\\\":\n      if (stream.match(/[\\][a-z]+/)) {\n        return "string.special";\n      }\n    case ".":\n      if (stream.match(".")) {\n        return "atom";\n      }\n    case "*":\n    case "-":\n    case "+":\n    case "^":\n      if (stream.match(peek)) {\n        return "atom";\n      }\n    case "$":\n      if (stream.match("$$")) {\n        return "builtin";\n      } else if (stream.match(/[$][0-9]+/)) {\n        return "variableName.special";\n      }\n    case "<":\n      if (stream.match(/<<[a-zA-Z_]+>>/)) {\n        return "builtin";\n      }\n    }\n\n    if (stream.match(\'//\')) {\n      stream.skipToEnd();\n      return "comment";\n    } else if (stream.match(\'return\')) {\n      return "operator";\n    } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      if (stream.match(/(?=[\\(.])/)) {\n        return "variable";\n      } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n        return "def";\n      }\n      return "variableName.special";\n    } else if (["[", "]", "(", ")"].indexOf(stream.peek()) != -1) {\n      stream.next();\n      return "bracket";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvZWJuZi5qcz9iYzhiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSxtQkFBbUI7QUFDbkIsaUJBQWlCOztBQUVWO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsT0FBTywrQkFBK0I7QUFDdEM7QUFDQTtBQUNBLE9BQU8sK0JBQStCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qiw4QkFBOEI7QUFDOUIsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsK0NBQStDOztBQUUvQztBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxTQUFTO0FBQ1QsOEJBQThCO0FBQzlCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTyw2QkFBNkI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzNzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29tbWVudFR5cGUgPSB7c2xhc2g6IDAsIHBhcmVudGhlc2lzOiAxfTtcbnZhciBzdGF0ZVR5cGUgPSB7Y29tbWVudDogMCwgX3N0cmluZzogMSwgY2hhcmFjdGVyQ2xhc3M6IDJ9O1xuXG5leHBvcnQgY29uc3QgZWJuZiA9IHtcbiAgc3RhcnRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzdHJpbmdUeXBlOiBudWxsLFxuICAgICAgY29tbWVudFR5cGU6IG51bGwsXG4gICAgICBicmFjZWQ6IDAsXG4gICAgICBsaHM6IHRydWUsXG4gICAgICBsb2NhbFN0YXRlOiBudWxsLFxuICAgICAgc3RhY2s6IFtdLFxuICAgICAgaW5EZWZpbml0aW9uOiBmYWxzZVxuICAgIH07XG4gIH0sXG4gIHRva2VuOiBmdW5jdGlvbiAoc3RyZWFtLCBzdGF0ZSkge1xuICAgIGlmICghc3RyZWFtKSByZXR1cm47XG5cbiAgICAvL2NoZWNrIGZvciBzdGF0ZSBjaGFuZ2VzXG4gICAgaWYgKHN0YXRlLnN0YWNrLmxlbmd0aCA9PT0gMCkge1xuICAgICAgLy9zdHJpbmdzXG4gICAgICBpZiAoKHN0cmVhbS5wZWVrKCkgPT0gJ1wiJykgfHwgKHN0cmVhbS5wZWVrKCkgPT0gXCInXCIpKSB7XG4gICAgICAgIHN0YXRlLnN0cmluZ1R5cGUgPSBzdHJlYW0ucGVlaygpO1xuICAgICAgICBzdHJlYW0ubmV4dCgpOyAvLyBTa2lwIHF1b3RlXG4gICAgICAgIHN0YXRlLnN0YWNrLnVuc2hpZnQoc3RhdGVUeXBlLl9zdHJpbmcpO1xuICAgICAgfSBlbHNlIGlmIChzdHJlYW0ubWF0Y2goJy8qJykpIHsgLy9jb21tZW50cyBzdGFydGluZyB3aXRoIC8qXG4gICAgICAgIHN0YXRlLnN0YWNrLnVuc2hpZnQoc3RhdGVUeXBlLmNvbW1lbnQpO1xuICAgICAgICBzdGF0ZS5jb21tZW50VHlwZSA9IGNvbW1lbnRUeXBlLnNsYXNoO1xuICAgICAgfSBlbHNlIGlmIChzdHJlYW0ubWF0Y2goJygqJykpIHsgLy9jb21tZW50cyBzdGFydGluZyB3aXRoICgqXG4gICAgICAgIHN0YXRlLnN0YWNrLnVuc2hpZnQoc3RhdGVUeXBlLmNvbW1lbnQpO1xuICAgICAgICBzdGF0ZS5jb21tZW50VHlwZSA9IGNvbW1lbnRUeXBlLnBhcmVudGhlc2lzO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vcmV0dXJuIHN0YXRlXG4gICAgLy9zdGFjayBoYXNcbiAgICBzd2l0Y2ggKHN0YXRlLnN0YWNrWzBdKSB7XG4gICAgY2FzZSBzdGF0ZVR5cGUuX3N0cmluZzpcbiAgICAgIHdoaWxlIChzdGF0ZS5zdGFja1swXSA9PT0gc3RhdGVUeXBlLl9zdHJpbmcgJiYgIXN0cmVhbS5lb2woKSkge1xuICAgICAgICBpZiAoc3RyZWFtLnBlZWsoKSA9PT0gc3RhdGUuc3RyaW5nVHlwZSkge1xuICAgICAgICAgIHN0cmVhbS5uZXh0KCk7IC8vIFNraXAgcXVvdGVcbiAgICAgICAgICBzdGF0ZS5zdGFjay5zaGlmdCgpOyAvLyBDbGVhciBmbGFnXG4gICAgICAgIH0gZWxzZSBpZiAoc3RyZWFtLnBlZWsoKSA9PT0gXCJcXFxcXCIpIHtcbiAgICAgICAgICBzdHJlYW0ubmV4dCgpO1xuICAgICAgICAgIHN0cmVhbS5uZXh0KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RyZWFtLm1hdGNoKC9eLlteXFxcXFxcXCJcXCddKi8pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RhdGUubGhzID8gXCJwcm9wZXJ0eVwiIDogXCJzdHJpbmdcIjsgLy8gVG9rZW4gc3R5bGVcblxuICAgIGNhc2Ugc3RhdGVUeXBlLmNvbW1lbnQ6XG4gICAgICB3aGlsZSAoc3RhdGUuc3RhY2tbMF0gPT09IHN0YXRlVHlwZS5jb21tZW50ICYmICFzdHJlYW0uZW9sKCkpIHtcbiAgICAgICAgaWYgKHN0YXRlLmNvbW1lbnRUeXBlID09PSBjb21tZW50VHlwZS5zbGFzaCAmJiBzdHJlYW0ubWF0Y2goJyovJykpIHtcbiAgICAgICAgICBzdGF0ZS5zdGFjay5zaGlmdCgpOyAvLyBDbGVhciBmbGFnXG4gICAgICAgICAgc3RhdGUuY29tbWVudFR5cGUgPSBudWxsO1xuICAgICAgICB9IGVsc2UgaWYgKHN0YXRlLmNvbW1lbnRUeXBlID09PSBjb21tZW50VHlwZS5wYXJlbnRoZXNpcyAmJiBzdHJlYW0ubWF0Y2goJyopJykpIHtcbiAgICAgICAgICBzdGF0ZS5zdGFjay5zaGlmdCgpOyAvLyBDbGVhciBmbGFnXG4gICAgICAgICAgc3RhdGUuY29tbWVudFR5cGUgPSBudWxsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0cmVhbS5tYXRjaCgvXi5bXlxcKl0qLyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBcImNvbW1lbnRcIjtcblxuICAgIGNhc2Ugc3RhdGVUeXBlLmNoYXJhY3RlckNsYXNzOlxuICAgICAgd2hpbGUgKHN0YXRlLnN0YWNrWzBdID09PSBzdGF0ZVR5cGUuY2hhcmFjdGVyQ2xhc3MgJiYgIXN0cmVhbS5lb2woKSkge1xuICAgICAgICBpZiAoIShzdHJlYW0ubWF0Y2goL15bXlxcXVxcXFxdKy8pIHx8IHN0cmVhbS5tYXRjaCgnLicpKSkge1xuICAgICAgICAgIHN0YXRlLnN0YWNrLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBcIm9wZXJhdG9yXCI7XG4gICAgfVxuXG4gICAgdmFyIHBlZWsgPSBzdHJlYW0ucGVlaygpO1xuXG4gICAgLy9ubyBzdGFja1xuICAgIHN3aXRjaCAocGVlaykge1xuICAgIGNhc2UgXCJbXCI6XG4gICAgICBzdHJlYW0ubmV4dCgpO1xuICAgICAgc3RhdGUuc3RhY2sudW5zaGlmdChzdGF0ZVR5cGUuY2hhcmFjdGVyQ2xhc3MpO1xuICAgICAgcmV0dXJuIFwiYnJhY2tldFwiO1xuICAgIGNhc2UgXCI6XCI6XG4gICAgY2FzZSBcInxcIjpcbiAgICBjYXNlIFwiO1wiOlxuICAgICAgc3RyZWFtLm5leHQoKTtcbiAgICAgIHJldHVybiBcIm9wZXJhdG9yXCI7XG4gICAgY2FzZSBcIiVcIjpcbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goXCIlJVwiKSkge1xuICAgICAgICByZXR1cm4gXCJoZWFkZXJcIjtcbiAgICAgIH0gZWxzZSBpZiAoc3RyZWFtLm1hdGNoKC9bJV1bQS1aYS16XSsvKSkge1xuICAgICAgICByZXR1cm4gXCJrZXl3b3JkXCI7XG4gICAgICB9IGVsc2UgaWYgKHN0cmVhbS5tYXRjaCgvWyVdW31dLykpIHtcbiAgICAgICAgcmV0dXJuIFwiYnJhY2tldFwiO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcIi9cIjpcbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goL1tcXC9dW0EtWmEtel0rLykpIHtcbiAgICAgICAgcmV0dXJuIFwia2V5d29yZFwiO1xuICAgICAgfVxuICAgIGNhc2UgXCJcXFxcXCI6XG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKC9bXFxdW2Etel0rLykpIHtcbiAgICAgICAgcmV0dXJuIFwic3RyaW5nLnNwZWNpYWxcIjtcbiAgICAgIH1cbiAgICBjYXNlIFwiLlwiOlxuICAgICAgaWYgKHN0cmVhbS5tYXRjaChcIi5cIikpIHtcbiAgICAgICAgcmV0dXJuIFwiYXRvbVwiO1xuICAgICAgfVxuICAgIGNhc2UgXCIqXCI6XG4gICAgY2FzZSBcIi1cIjpcbiAgICBjYXNlIFwiK1wiOlxuICAgIGNhc2UgXCJeXCI6XG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKHBlZWspKSB7XG4gICAgICAgIHJldHVybiBcImF0b21cIjtcbiAgICAgIH1cbiAgICBjYXNlIFwiJFwiOlxuICAgICAgaWYgKHN0cmVhbS5tYXRjaChcIiQkXCIpKSB7XG4gICAgICAgIHJldHVybiBcImJ1aWx0aW5cIjtcbiAgICAgIH0gZWxzZSBpZiAoc3RyZWFtLm1hdGNoKC9bJF1bMC05XSsvKSkge1xuICAgICAgICByZXR1cm4gXCJ2YXJpYWJsZU5hbWUuc3BlY2lhbFwiO1xuICAgICAgfVxuICAgIGNhc2UgXCI8XCI6XG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKC88PFthLXpBLVpfXSs+Pi8pKSB7XG4gICAgICAgIHJldHVybiBcImJ1aWx0aW5cIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc3RyZWFtLm1hdGNoKCcvLycpKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgfSBlbHNlIGlmIChzdHJlYW0ubWF0Y2goJ3JldHVybicpKSB7XG4gICAgICByZXR1cm4gXCJvcGVyYXRvclwiO1xuICAgIH0gZWxzZSBpZiAoc3RyZWFtLm1hdGNoKC9eW2EtekEtWl9dW2EtekEtWjAtOV9dKi8pKSB7XG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKC8oPz1bXFwoLl0pLykpIHtcbiAgICAgICAgcmV0dXJuIFwidmFyaWFibGVcIjtcbiAgICAgIH0gZWxzZSBpZiAoc3RyZWFtLm1hdGNoKC8oPz1bXFxzXFxuXSpbOj1dKS8pKSB7XG4gICAgICAgIHJldHVybiBcImRlZlwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFwidmFyaWFibGVOYW1lLnNwZWNpYWxcIjtcbiAgICB9IGVsc2UgaWYgKFtcIltcIiwgXCJdXCIsIFwiKFwiLCBcIilcIl0uaW5kZXhPZihzdHJlYW0ucGVlaygpKSAhPSAtMSkge1xuICAgICAgc3RyZWFtLm5leHQoKTtcbiAgICAgIHJldHVybiBcImJyYWNrZXRcIjtcbiAgICB9IGVsc2UgaWYgKCFzdHJlYW0uZWF0U3BhY2UoKSkge1xuICAgICAgc3RyZWFtLm5leHQoKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///374\n')}}]);