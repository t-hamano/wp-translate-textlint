(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[104],{

/***/ "./node_modules/@codemirror/legacy-modes/mode/yaml.js":
/*!************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/yaml.js ***!
  \************************************************************/
/*! exports provided: yaml */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"yaml\", function() { return yaml; });\nvar cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\nvar keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\nconst yaml = {\n  token: function(stream, state) {\n    var ch = stream.peek();\n    var esc = state.escaped;\n    state.escaped = false;\n    /* comments */\n    if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n      return \"string\";\n\n    if (state.literal && stream.indentation() > state.keyCol) {\n      stream.skipToEnd(); return \"string\";\n    } else if (state.literal) { state.literal = false; }\n    if (stream.sol()) {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      /* document start */\n      if(stream.match('---')) { return \"def\"; }\n      /* document end */\n      if (stream.match('...')) { return \"def\"; }\n      /* array list item */\n      if (stream.match(/^\\s*-\\s+/)) { return 'meta'; }\n    }\n    /* inline pairs/lists */\n    if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n      if (ch == '{')\n        state.inlinePairs++;\n      else if (ch == '}')\n        state.inlinePairs--;\n      else if (ch == '[')\n        state.inlineList++;\n      else\n        state.inlineList--;\n      return 'meta';\n    }\n\n    /* list separator */\n    if (state.inlineList > 0 && !esc && ch == ',') {\n      stream.next();\n      return 'meta';\n    }\n    /* pairs separator */\n    if (state.inlinePairs > 0 && !esc && ch == ',') {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      stream.next();\n      return 'meta';\n    }\n\n    /* start of value of a pair */\n    if (state.pairStart) {\n      /* block literals */\n      if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n      /* references */\n      if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable'; }\n      /* numbers */\n      if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n      if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n      /* keywords */\n      if (stream.match(keywordRegex)) { return 'keyword'; }\n    }\n\n    /* pairs (associative arrays) -> key */\n    if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n      state.pair = true;\n      state.keyCol = stream.indentation();\n      return \"atom\";\n    }\n    if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n    /* nothing found, continue */\n    state.pairStart = false;\n    state.escaped = (ch == '\\\\');\n    stream.next();\n    return null;\n  },\n  startState: function() {\n    return {\n      pair: false,\n      pairStart: false,\n      keyCol: 0,\n      inlinePairs: 0,\n      inlineList: 0,\n      literal: false,\n      escaped: false\n    };\n  },\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUveWFtbC5qcz85YmQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekIsS0FBSywwQkFBMEIsdUJBQXVCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsY0FBYztBQUM3QztBQUNBLGdDQUFnQyxjQUFjO0FBQzlDO0FBQ0EscUNBQXFDLGVBQWU7QUFDcEQ7QUFDQTtBQUNBLDBCQUEwQixHQUFHO0FBQzdCLGtCQUFrQjtBQUNsQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsc0JBQXNCLGVBQWU7QUFDaEY7QUFDQSx3REFBd0QsbUJBQW1CO0FBQzNFO0FBQ0EsMkVBQTJFLGlCQUFpQjtBQUM1RiwyRUFBMkUsT0FBTyxpQkFBaUI7QUFDbkc7QUFDQSx1Q0FBdUMsa0JBQWtCO0FBQ3pEOztBQUVBO0FBQ0Esb0RBQW9ELDZCQUE2QjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyx3QkFBd0IsZUFBZTs7QUFFckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0Bjb2RlbWlycm9yL2xlZ2FjeS1tb2Rlcy9tb2RlL3lhbWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29ucyA9IFsndHJ1ZScsICdmYWxzZScsICdvbicsICdvZmYnLCAneWVzJywgJ25vJ107XG52YXIga2V5d29yZFJlZ2V4ID0gbmV3IFJlZ0V4cChcIlxcXFxiKChcIitjb25zLmpvaW4oXCIpfChcIikrXCIpKSRcIiwgJ2knKTtcblxuZXhwb3J0IGNvbnN0IHlhbWwgPSB7XG4gIHRva2VuOiBmdW5jdGlvbihzdHJlYW0sIHN0YXRlKSB7XG4gICAgdmFyIGNoID0gc3RyZWFtLnBlZWsoKTtcbiAgICB2YXIgZXNjID0gc3RhdGUuZXNjYXBlZDtcbiAgICBzdGF0ZS5lc2NhcGVkID0gZmFsc2U7XG4gICAgLyogY29tbWVudHMgKi9cbiAgICBpZiAoY2ggPT0gXCIjXCIgJiYgKHN0cmVhbS5wb3MgPT0gMCB8fCAvXFxzLy50ZXN0KHN0cmVhbS5zdHJpbmcuY2hhckF0KHN0cmVhbS5wb3MgLSAxKSkpKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgfVxuXG4gICAgaWYgKHN0cmVhbS5tYXRjaCgvXignKFteJ118XFxcXC4pKic/fFwiKFteXCJdfFxcXFwuKSpcIj8pLykpXG4gICAgICByZXR1cm4gXCJzdHJpbmdcIjtcblxuICAgIGlmIChzdGF0ZS5saXRlcmFsICYmIHN0cmVhbS5pbmRlbnRhdGlvbigpID4gc3RhdGUua2V5Q29sKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7IHJldHVybiBcInN0cmluZ1wiO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUubGl0ZXJhbCkgeyBzdGF0ZS5saXRlcmFsID0gZmFsc2U7IH1cbiAgICBpZiAoc3RyZWFtLnNvbCgpKSB7XG4gICAgICBzdGF0ZS5rZXlDb2wgPSAwO1xuICAgICAgc3RhdGUucGFpciA9IGZhbHNlO1xuICAgICAgc3RhdGUucGFpclN0YXJ0ID0gZmFsc2U7XG4gICAgICAvKiBkb2N1bWVudCBzdGFydCAqL1xuICAgICAgaWYoc3RyZWFtLm1hdGNoKCctLS0nKSkgeyByZXR1cm4gXCJkZWZcIjsgfVxuICAgICAgLyogZG9jdW1lbnQgZW5kICovXG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKCcuLi4nKSkgeyByZXR1cm4gXCJkZWZcIjsgfVxuICAgICAgLyogYXJyYXkgbGlzdCBpdGVtICovXG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKC9eXFxzKi1cXHMrLykpIHsgcmV0dXJuICdtZXRhJzsgfVxuICAgIH1cbiAgICAvKiBpbmxpbmUgcGFpcnMvbGlzdHMgKi9cbiAgICBpZiAoc3RyZWFtLm1hdGNoKC9eKFxce3xcXH18XFxbfFxcXSkvKSkge1xuICAgICAgaWYgKGNoID09ICd7JylcbiAgICAgICAgc3RhdGUuaW5saW5lUGFpcnMrKztcbiAgICAgIGVsc2UgaWYgKGNoID09ICd9JylcbiAgICAgICAgc3RhdGUuaW5saW5lUGFpcnMtLTtcbiAgICAgIGVsc2UgaWYgKGNoID09ICdbJylcbiAgICAgICAgc3RhdGUuaW5saW5lTGlzdCsrO1xuICAgICAgZWxzZVxuICAgICAgICBzdGF0ZS5pbmxpbmVMaXN0LS07XG4gICAgICByZXR1cm4gJ21ldGEnO1xuICAgIH1cblxuICAgIC8qIGxpc3Qgc2VwYXJhdG9yICovXG4gICAgaWYgKHN0YXRlLmlubGluZUxpc3QgPiAwICYmICFlc2MgJiYgY2ggPT0gJywnKSB7XG4gICAgICBzdHJlYW0ubmV4dCgpO1xuICAgICAgcmV0dXJuICdtZXRhJztcbiAgICB9XG4gICAgLyogcGFpcnMgc2VwYXJhdG9yICovXG4gICAgaWYgKHN0YXRlLmlubGluZVBhaXJzID4gMCAmJiAhZXNjICYmIGNoID09ICcsJykge1xuICAgICAgc3RhdGUua2V5Q29sID0gMDtcbiAgICAgIHN0YXRlLnBhaXIgPSBmYWxzZTtcbiAgICAgIHN0YXRlLnBhaXJTdGFydCA9IGZhbHNlO1xuICAgICAgc3RyZWFtLm5leHQoKTtcbiAgICAgIHJldHVybiAnbWV0YSc7XG4gICAgfVxuXG4gICAgLyogc3RhcnQgb2YgdmFsdWUgb2YgYSBwYWlyICovXG4gICAgaWYgKHN0YXRlLnBhaXJTdGFydCkge1xuICAgICAgLyogYmxvY2sgbGl0ZXJhbHMgKi9cbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goL15cXHMqKFxcfHxcXD4pXFxzKi8pKSB7IHN0YXRlLmxpdGVyYWwgPSB0cnVlOyByZXR1cm4gJ21ldGEnOyB9O1xuICAgICAgLyogcmVmZXJlbmNlcyAqL1xuICAgICAgaWYgKHN0cmVhbS5tYXRjaCgvXlxccyooXFwmfFxcKilbYS16MC05XFwuXy1dK1xcYi9pKSkgeyByZXR1cm4gJ3ZhcmlhYmxlJzsgfVxuICAgICAgLyogbnVtYmVycyAqL1xuICAgICAgaWYgKHN0YXRlLmlubGluZVBhaXJzID09IDAgJiYgc3RyZWFtLm1hdGNoKC9eXFxzKi0/WzAtOVxcLlxcLF0rXFxzPyQvKSkgeyByZXR1cm4gJ251bWJlcic7IH1cbiAgICAgIGlmIChzdGF0ZS5pbmxpbmVQYWlycyA+IDAgJiYgc3RyZWFtLm1hdGNoKC9eXFxzKi0/WzAtOVxcLlxcLF0rXFxzPyg/PSgsfH0pKS8pKSB7IHJldHVybiAnbnVtYmVyJzsgfVxuICAgICAgLyoga2V5d29yZHMgKi9cbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goa2V5d29yZFJlZ2V4KSkgeyByZXR1cm4gJ2tleXdvcmQnOyB9XG4gICAgfVxuXG4gICAgLyogcGFpcnMgKGFzc29jaWF0aXZlIGFycmF5cykgLT4ga2V5ICovXG4gICAgaWYgKCFzdGF0ZS5wYWlyICYmIHN0cmVhbS5tYXRjaCgvXlxccyooPzpbLFxcW1xcXXt9JiohfD4nXCIlQGBdW15cXHMnXCI6XXxbXixcXFtcXF17fSMmKiF8PidcIiVAYF0pW14jXSo/KD89XFxzKjooJHxcXHMpKS8pKSB7XG4gICAgICBzdGF0ZS5wYWlyID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmtleUNvbCA9IHN0cmVhbS5pbmRlbnRhdGlvbigpO1xuICAgICAgcmV0dXJuIFwiYXRvbVwiO1xuICAgIH1cbiAgICBpZiAoc3RhdGUucGFpciAmJiBzdHJlYW0ubWF0Y2goL146XFxzKi8pKSB7IHN0YXRlLnBhaXJTdGFydCA9IHRydWU7IHJldHVybiAnbWV0YSc7IH1cblxuICAgIC8qIG5vdGhpbmcgZm91bmQsIGNvbnRpbnVlICovXG4gICAgc3RhdGUucGFpclN0YXJ0ID0gZmFsc2U7XG4gICAgc3RhdGUuZXNjYXBlZCA9IChjaCA9PSAnXFxcXCcpO1xuICAgIHN0cmVhbS5uZXh0KCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sXG4gIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwYWlyOiBmYWxzZSxcbiAgICAgIHBhaXJTdGFydDogZmFsc2UsXG4gICAgICBrZXlDb2w6IDAsXG4gICAgICBpbmxpbmVQYWlyczogMCxcbiAgICAgIGlubGluZUxpc3Q6IDAsXG4gICAgICBsaXRlcmFsOiBmYWxzZSxcbiAgICAgIGVzY2FwZWQ6IGZhbHNlXG4gICAgfTtcbiAgfSxcbiAgbGFuZ3VhZ2VEYXRhOiB7XG4gICAgY29tbWVudFRva2Vuczoge2xpbmU6IFwiI1wifVxuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/legacy-modes/mode/yaml.js\n");

/***/ })

}]);