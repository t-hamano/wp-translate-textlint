(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{442:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"yacas\", function() { return yacas; });\nfunction words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                      \"FromString Function Integrate InverseTaylor Limit \" +\n                      \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                      \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                      \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                      \"ToStdout ToString TraceRule Until While\");\n\n// patterns\nvar pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\nvar pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n// regular expressions\nvar reFloatForm    = new RegExp(pFloatForm);\nvar reIdentifier   = new RegExp(pIdentifier);\nvar rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\nvar reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === '/') {\n    if (stream.eat('*')) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // update scope info\n  var m = stream.match(/^(\\w+)\\s*\\(/, false);\n  if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n    state.scopes.push('bodied');\n\n  var scope = currentScope(state);\n\n  if (scope === 'bodied' && ch === '[')\n    state.scopes.pop();\n\n  if (ch === '[' || ch === '{' || ch === '(')\n    state.scopes.push(ch);\n\n  scope = currentScope(state);\n\n  if (scope === '[' && ch === ']' ||\n      scope === '{' && ch === '}' ||\n      scope === '(' && ch === ')')\n    state.scopes.pop();\n\n  if (ch === ';') {\n    while (scope === 'bodied') {\n      state.scopes.pop();\n      scope = currentScope(state);\n    }\n  }\n\n  // look for ordered rules\n  if (stream.match(/\\d+ *#/, true, false)) {\n    return 'qualifier';\n  }\n\n  // look for numbers\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  }\n\n  // look for placeholders\n  if (stream.match(rePattern, true, false)) {\n    return 'variableName.special';\n  }\n\n  // match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  }\n\n  // literals looking like function calls\n  if (stream.match(reFunctionLike, true, false)) {\n    stream.backUp(1);\n    return 'variableName.function';\n  }\n\n  // all other identifiers\n  if (stream.match(reIdentifier, true, false)) {\n    return 'variable';\n  }\n\n  // operators; note that operators like @@ or /; are matched separately for each symbol.\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n    return 'operator';\n  }\n\n  // everything else is an error\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next, end = false, escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === '\\\\';\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return 'string';\n};\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while((next = stream.next()) != null) {\n    if (prev === '*' && next === '/') {\n      state.tokenize = tokenBase;\n      break;\n    }\n    prev = next;\n  }\n  return 'comment';\n}\n\nfunction currentScope(state) {\n  var scope = null;\n  if (state.scopes.length > 0)\n    scope = state.scopes[state.scopes.length - 1];\n  return scope;\n}\n\nconst yacas = {\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scopes: []\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize !== tokenBase && state.tokenize !== null)\n      return null;\n\n    var delta = 0;\n    if (textAfter === ']' || textAfter === '];' ||\n        textAfter === '}' || textAfter === '};' ||\n        textAfter === ');')\n      delta = -1;\n\n    return (state.scopes.length + delta) * cx.unit;\n  },\n\n  languageData: {\n    electricInput: /[{}\\[\\]()\\;]/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUveWFjYXMuanM/MmJmZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0I7O0FBRUE7O0FBRUE7QUFDQSxrQkFBa0IsY0FBYztBQUNoQztBQUNBOztBQUVBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLEVBQUU7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsa0NBQWtDO0FBQ2pELHlDQUF5QztBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOENBQThDO0FBQzlDLHdCQUF3QixzQkFBc0I7QUFDOUMseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLHVCQUF1QixRQUFRO0FBQy9CLG9CQUFvQixvQkFBb0I7QUFDeEM7QUFDQSIsImZpbGUiOiI0NDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3b3JkcyhzdHIpIHtcbiAgdmFyIG9iaiA9IHt9LCB3b3JkcyA9IHN0ci5zcGxpdChcIiBcIik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgd29yZHMubGVuZ3RoOyArK2kpIG9ialt3b3Jkc1tpXV0gPSB0cnVlO1xuICByZXR1cm4gb2JqO1xufVxuXG52YXIgYm9kaWVkT3BzID0gd29yZHMoXCJBc3NlcnQgQmFja1F1b3RlIEQgRGVmdW4gRGVyaXYgRm9yIEZvckVhY2ggRnJvbUZpbGUgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgIFwiRnJvbVN0cmluZyBGdW5jdGlvbiBJbnRlZ3JhdGUgSW52ZXJzZVRheWxvciBMaW1pdCBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgXCJMb2NhbFN5bWJvbHMgTWFjcm8gTWFjcm9SdWxlIE1hY3JvUnVsZVBhdHRlcm4gXCIgK1xuICAgICAgICAgICAgICAgICAgICAgIFwiTkludGVncmF0ZSBSdWxlIFJ1bGVQYXR0ZXJuIFN1YnN0IFREIFRFeHBsaWNpdFN1bSBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgXCJUU3VtIFRheWxvciBUYXlsb3IxIFRheWxvcjIgVGF5bG9yMyBUb0ZpbGUgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgIFwiVG9TdGRvdXQgVG9TdHJpbmcgVHJhY2VSdWxlIFVudGlsIFdoaWxlXCIpO1xuXG4vLyBwYXR0ZXJuc1xudmFyIHBGbG9hdEZvcm0gID0gXCIoPzooPzpcXFxcLlxcXFxkK3xcXFxcZCtcXFxcLlxcXFxkKnxcXFxcZCspKD86W2VFXVsrLV0/XFxcXGQrKT8pXCI7XG52YXIgcElkZW50aWZpZXIgPSBcIig/OlthLXpBLVpcXFxcJCddW2EtekEtWjAtOVxcXFwkJ10qKVwiO1xuXG4vLyByZWd1bGFyIGV4cHJlc3Npb25zXG52YXIgcmVGbG9hdEZvcm0gICAgPSBuZXcgUmVnRXhwKHBGbG9hdEZvcm0pO1xudmFyIHJlSWRlbnRpZmllciAgID0gbmV3IFJlZ0V4cChwSWRlbnRpZmllcik7XG52YXIgcmVQYXR0ZXJuICAgICAgPSBuZXcgUmVnRXhwKHBJZGVudGlmaWVyICsgXCI/X1wiICsgcElkZW50aWZpZXIpO1xudmFyIHJlRnVuY3Rpb25MaWtlID0gbmV3IFJlZ0V4cChwSWRlbnRpZmllciArIFwiXFxcXHMqXFxcXChcIik7XG5cbmZ1bmN0aW9uIHRva2VuQmFzZShzdHJlYW0sIHN0YXRlKSB7XG4gIHZhciBjaDtcblxuICAvLyBnZXQgbmV4dCBjaGFyYWN0ZXJcbiAgY2ggPSBzdHJlYW0ubmV4dCgpO1xuXG4gIC8vIHN0cmluZ1xuICBpZiAoY2ggPT09ICdcIicpIHtcbiAgICBzdGF0ZS50b2tlbml6ZSA9IHRva2VuU3RyaW5nO1xuICAgIHJldHVybiBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTtcbiAgfVxuXG4gIC8vIGNvbW1lbnRcbiAgaWYgKGNoID09PSAnLycpIHtcbiAgICBpZiAoc3RyZWFtLmVhdCgnKicpKSB7XG4gICAgICBzdGF0ZS50b2tlbml6ZSA9IHRva2VuQ29tbWVudDtcbiAgICAgIHJldHVybiBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTtcbiAgICB9XG4gICAgaWYgKHN0cmVhbS5lYXQoXCIvXCIpKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgfVxuICB9XG5cbiAgLy8gZ28gYmFjayBvbmUgY2hhcmFjdGVyXG4gIHN0cmVhbS5iYWNrVXAoMSk7XG5cbiAgLy8gdXBkYXRlIHNjb3BlIGluZm9cbiAgdmFyIG0gPSBzdHJlYW0ubWF0Y2goL14oXFx3KylcXHMqXFwoLywgZmFsc2UpO1xuICBpZiAobSAhPT0gbnVsbCAmJiBib2RpZWRPcHMuaGFzT3duUHJvcGVydHkobVsxXSkpXG4gICAgc3RhdGUuc2NvcGVzLnB1c2goJ2JvZGllZCcpO1xuXG4gIHZhciBzY29wZSA9IGN1cnJlbnRTY29wZShzdGF0ZSk7XG5cbiAgaWYgKHNjb3BlID09PSAnYm9kaWVkJyAmJiBjaCA9PT0gJ1snKVxuICAgIHN0YXRlLnNjb3Blcy5wb3AoKTtcblxuICBpZiAoY2ggPT09ICdbJyB8fCBjaCA9PT0gJ3snIHx8IGNoID09PSAnKCcpXG4gICAgc3RhdGUuc2NvcGVzLnB1c2goY2gpO1xuXG4gIHNjb3BlID0gY3VycmVudFNjb3BlKHN0YXRlKTtcblxuICBpZiAoc2NvcGUgPT09ICdbJyAmJiBjaCA9PT0gJ10nIHx8XG4gICAgICBzY29wZSA9PT0gJ3snICYmIGNoID09PSAnfScgfHxcbiAgICAgIHNjb3BlID09PSAnKCcgJiYgY2ggPT09ICcpJylcbiAgICBzdGF0ZS5zY29wZXMucG9wKCk7XG5cbiAgaWYgKGNoID09PSAnOycpIHtcbiAgICB3aGlsZSAoc2NvcGUgPT09ICdib2RpZWQnKSB7XG4gICAgICBzdGF0ZS5zY29wZXMucG9wKCk7XG4gICAgICBzY29wZSA9IGN1cnJlbnRTY29wZShzdGF0ZSk7XG4gICAgfVxuICB9XG5cbiAgLy8gbG9vayBmb3Igb3JkZXJlZCBydWxlc1xuICBpZiAoc3RyZWFtLm1hdGNoKC9cXGQrICojLywgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgcmV0dXJuICdxdWFsaWZpZXInO1xuICB9XG5cbiAgLy8gbG9vayBmb3IgbnVtYmVyc1xuICBpZiAoc3RyZWFtLm1hdGNoKHJlRmxvYXRGb3JtLCB0cnVlLCBmYWxzZSkpIHtcbiAgICByZXR1cm4gJ251bWJlcic7XG4gIH1cblxuICAvLyBsb29rIGZvciBwbGFjZWhvbGRlcnNcbiAgaWYgKHN0cmVhbS5tYXRjaChyZVBhdHRlcm4sIHRydWUsIGZhbHNlKSkge1xuICAgIHJldHVybiAndmFyaWFibGVOYW1lLnNwZWNpYWwnO1xuICB9XG5cbiAgLy8gbWF0Y2ggYWxsIGJyYWNlcyBzZXBhcmF0ZWx5XG4gIGlmIChzdHJlYW0ubWF0Y2goLyg/OlxcW3xcXF18e3x9fFxcKHxcXCkpLywgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgcmV0dXJuICdicmFja2V0JztcbiAgfVxuXG4gIC8vIGxpdGVyYWxzIGxvb2tpbmcgbGlrZSBmdW5jdGlvbiBjYWxsc1xuICBpZiAoc3RyZWFtLm1hdGNoKHJlRnVuY3Rpb25MaWtlLCB0cnVlLCBmYWxzZSkpIHtcbiAgICBzdHJlYW0uYmFja1VwKDEpO1xuICAgIHJldHVybiAndmFyaWFibGVOYW1lLmZ1bmN0aW9uJztcbiAgfVxuXG4gIC8vIGFsbCBvdGhlciBpZGVudGlmaWVyc1xuICBpZiAoc3RyZWFtLm1hdGNoKHJlSWRlbnRpZmllciwgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgcmV0dXJuICd2YXJpYWJsZSc7XG4gIH1cblxuICAvLyBvcGVyYXRvcnM7IG5vdGUgdGhhdCBvcGVyYXRvcnMgbGlrZSBAQCBvciAvOyBhcmUgbWF0Y2hlZCBzZXBhcmF0ZWx5IGZvciBlYWNoIHN5bWJvbC5cbiAgaWYgKHN0cmVhbS5tYXRjaCgvKD86XFxcXHxcXCt8XFwtfFxcKnxcXC98LHw7fFxcLnw6fEB8fnw9fD58PHwmfFxcfHxffGB8J3xcXF58XFw/fCF8JXwjKS8sIHRydWUsIGZhbHNlKSkge1xuICAgIHJldHVybiAnb3BlcmF0b3InO1xuICB9XG5cbiAgLy8gZXZlcnl0aGluZyBlbHNlIGlzIGFuIGVycm9yXG4gIHJldHVybiAnZXJyb3InO1xufVxuXG5mdW5jdGlvbiB0b2tlblN0cmluZyhzdHJlYW0sIHN0YXRlKSB7XG4gIHZhciBuZXh0LCBlbmQgPSBmYWxzZSwgZXNjYXBlZCA9IGZhbHNlO1xuICB3aGlsZSAoKG5leHQgPSBzdHJlYW0ubmV4dCgpKSAhPSBudWxsKSB7XG4gICAgaWYgKG5leHQgPT09ICdcIicgJiYgIWVzY2FwZWQpIHtcbiAgICAgIGVuZCA9IHRydWU7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgZXNjYXBlZCA9ICFlc2NhcGVkICYmIG5leHQgPT09ICdcXFxcJztcbiAgfVxuICBpZiAoZW5kICYmICFlc2NhcGVkKSB7XG4gICAgc3RhdGUudG9rZW5pemUgPSB0b2tlbkJhc2U7XG4gIH1cbiAgcmV0dXJuICdzdHJpbmcnO1xufTtcblxuZnVuY3Rpb24gdG9rZW5Db21tZW50KHN0cmVhbSwgc3RhdGUpIHtcbiAgdmFyIHByZXYsIG5leHQ7XG4gIHdoaWxlKChuZXh0ID0gc3RyZWFtLm5leHQoKSkgIT0gbnVsbCkge1xuICAgIGlmIChwcmV2ID09PSAnKicgJiYgbmV4dCA9PT0gJy8nKSB7XG4gICAgICBzdGF0ZS50b2tlbml6ZSA9IHRva2VuQmFzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBwcmV2ID0gbmV4dDtcbiAgfVxuICByZXR1cm4gJ2NvbW1lbnQnO1xufVxuXG5mdW5jdGlvbiBjdXJyZW50U2NvcGUoc3RhdGUpIHtcbiAgdmFyIHNjb3BlID0gbnVsbDtcbiAgaWYgKHN0YXRlLnNjb3Blcy5sZW5ndGggPiAwKVxuICAgIHNjb3BlID0gc3RhdGUuc2NvcGVzW3N0YXRlLnNjb3Blcy5sZW5ndGggLSAxXTtcbiAgcmV0dXJuIHNjb3BlO1xufVxuXG5leHBvcnQgY29uc3QgeWFjYXMgPSB7XG4gIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0b2tlbml6ZTogdG9rZW5CYXNlLFxuICAgICAgc2NvcGVzOiBbXVxuICAgIH07XG4gIH0sXG4gIHRva2VuOiBmdW5jdGlvbihzdHJlYW0sIHN0YXRlKSB7XG4gICAgaWYgKHN0cmVhbS5lYXRTcGFjZSgpKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gc3RhdGUudG9rZW5pemUoc3RyZWFtLCBzdGF0ZSk7XG4gIH0sXG4gIGluZGVudDogZnVuY3Rpb24oc3RhdGUsIHRleHRBZnRlciwgY3gpIHtcbiAgICBpZiAoc3RhdGUudG9rZW5pemUgIT09IHRva2VuQmFzZSAmJiBzdGF0ZS50b2tlbml6ZSAhPT0gbnVsbClcbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgdmFyIGRlbHRhID0gMDtcbiAgICBpZiAodGV4dEFmdGVyID09PSAnXScgfHwgdGV4dEFmdGVyID09PSAnXTsnIHx8XG4gICAgICAgIHRleHRBZnRlciA9PT0gJ30nIHx8IHRleHRBZnRlciA9PT0gJ307JyB8fFxuICAgICAgICB0ZXh0QWZ0ZXIgPT09ICcpOycpXG4gICAgICBkZWx0YSA9IC0xO1xuXG4gICAgcmV0dXJuIChzdGF0ZS5zY29wZXMubGVuZ3RoICsgZGVsdGEpICogY3gudW5pdDtcbiAgfSxcblxuICBsYW5ndWFnZURhdGE6IHtcbiAgICBlbGVjdHJpY0lucHV0OiAvW3t9XFxbXFxdKClcXDtdLyxcbiAgICBjb21tZW50VG9rZW5zOiB7bGluZTogXCIvL1wiLCBibG9jazoge29wZW46IFwiLypcIiwgY2xvc2U6IFwiKi9cIn19XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///442\n")}}]);